/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luck
 */
public class Proveedor extends javax.swing.JFrame {

    String data[][]={};
    String cabecera[]={"Nombre","Domicilio","Telefono","Email"};
    DefaultTableModel table;
    Connection miConexion;
    int iduser;
    String usuario,rol;
    Screensize pantalla = new Screensize();
    Mysqlconector conexion = new Mysqlconector();
    public Proveedor(String user,String role){
        try {
            usuario=user;
            rol=role;
            initComponents();
            this.getContentPane().setBackground(Color.lightGray);
            table= new DefaultTableModel(data,cabecera);
            tabla.setModel(table);
            
            // TODO add your handling code here:
             miConexion = conexion.Connection().getConnection();
            String query ="SELECT Nombre,Domicilio,telefono,Email FROM Provedores WHERE status ='A' ";         
            // create the java statement
            Statement st = miConexion.createStatement();
            ResultSet rs = st.executeQuery(query);
            //checamos que haya usuarios correctos       
            int cont=0;
            while(rs.next()){
                String datos[]={rs.getString("Nombre"),rs.getString("Domicilio"),rs.getString("telefono"),rs.getString("Email")};
                table.addRow(datos);
                // cont++;
            }
            
            //restricciones para usuarios que no sean el admin
            if(!role.equals("administrador")){
                this.borrar.setEnabled(false);
                
            } 
        } catch (SQLException ex) {
            Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            Mysqlconector.liberaConexion(miConexion);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Domicilio = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Tel = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        busqueda = new javax.swing.JTextField();
        busque = new javax.swing.JButton();
        nuevo = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Nombre:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 36, 76, 28));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/regresa_01.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(702, 589, 69, 43));

        Nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NombreKeyTyped(evt);
            }
        });
        getContentPane().add(Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 36, 186, -1));

        jLabel2.setText("Domicilio: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 76, 83, 28));

        Domicilio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DomicilioActionPerformed(evt);
            }
        });
        Domicilio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DomicilioKeyTyped(evt);
            }
        });
        getContentPane().add(Domicilio, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 76, 380, -1));

        jLabel3.setText("Telefono: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(372, 41, 81, -1));

        Tel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TelActionPerformed(evt);
            }
        });
        Tel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TelKeyTyped(evt);
            }
        });
        getContentPane().add(Tel, new org.netbeans.lib.awtextra.AbsoluteConstraints(465, 36, 171, -1));

        jLabel4.setText("Email: ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 123, 62, 27));

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emailKeyTyped(evt);
            }
        });
        getContentPane().add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 122, 233, -1));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 272, 578, 360));

        busqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaActionPerformed(evt);
            }
        });
        getContentPane().add(busqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 212, 176, 27));

        busque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.jpeg"))); // NOI18N
        busque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busqueActionPerformed(evt);
            }
        });
        getContentPane().add(busque, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 75, 50));

        nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevo.png"))); // NOI18N
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        getContentPane().add(nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(702, 273, 69, 40));

        editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/editar.png"))); // NOI18N
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });
        getContentPane().add(editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(702, 377, 69, 41));

        borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });
        getContentPane().add(borrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(702, 480, 69, 42));

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(702, 100, -1, 50));

        jLabel5.setText("Multibusqueda");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 221, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Administrador a = new Administrador(usuario,rol);
        a.setVisible(true);
        a.setBounds((pantalla.ancho / 2) - (a.getWidth() / 2), (pantalla.alto / 2) - (a.getHeight() / 2),a.getWidth(),a.getHeight());
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
               int filasele=tabla.getSelectedRow();
                   this.Nombre.setText(tabla.getValueAt(filasele, 0).toString());
                   this.Domicilio.setText(tabla.getValueAt(filasele, 1).toString());
                   this.Tel.setText(tabla.getValueAt(filasele, 2).toString());
                   this.email.setText(tabla.getValueAt(filasele, 3).toString());

               try {
                   iduser=0;
                   // TODO add your handling code here:
                   miConexion = conexion.Connection().getConnection();
                   String query ="SELECT id_provedor FROM Provedores WHERE Nombre= '"+this.Nombre.getText()+"' ";
                   // create the java statement
                   Statement st = miConexion.createStatement();
                   ResultSet rs = st.executeQuery(query);

                   if(rs.next()){
                       iduser=Integer.parseInt(rs.getString("id_provedor"));
                   }
                 
               } catch (SQLException ex) {
                   Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
               }finally{
                   Mysqlconector.liberaConexion(miConexion);
               }
     
    }//GEN-LAST:event_tablaMouseClicked

    private void busquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_busquedaActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        // TODO add your handling code here:
       int fila = tabla.getSelectedRow();
            if(fila==-1){
                JOptionPane.showMessageDialog(null,"Seleccione Provedor a Modificar e intentelo de nuevo correctamente'","Error Guardar",JOptionPane.ERROR_MESSAGE);
                return;
            }
             if(validaciones()==1){
                   JOptionPane.showMessageDialog(null,"Error algunos datos son necesarios favor de ingresarlos","Error guardar",JOptionPane.ERROR_MESSAGE);                 
                   return;
             }
             if(validaciones()==2){
                   JOptionPane.showMessageDialog(null, "Email no valido ingreselo correctamente","Error Email",JOptionPane.ERROR_MESSAGE);
                   return;
             }
             if(!Validaciones.validateTelefono(Tel.getText())){
                JOptionPane.showMessageDialog(null, "Telefono no valido ingreselo con formato (xxx)-xxx-xx-xx o xxx-xxx-xx-xx","Error Telefono",JOptionPane.ERROR_MESSAGE);
                return;
             }   
             int mensaje=JOptionPane.showConfirmDialog(null,"Estas seguro que deseas Modificar este Provedor?");
             if(mensaje==JOptionPane.YES_OPTION){
               
                 try {
                     // TODO add your handling code here:
                      miConexion = conexion.Connection().getConnection();
                     //actualizar o modificar elregistro seleccionado
                     String queryupdate="UPDATE Provedores SET Nombre='"+this.Nombre.getText()+"',Domicilio='"+this.Domicilio.getText()+"',"
                             + "telefono='"+this.Tel.getText()+"',Email='"+this.email.getText()+"' "
                             + "WHERE id_provedor="+iduser+"";
                     //executar el query
                     
                     Statement st = miConexion.createStatement();
                     int cant = st.executeUpdate(queryupdate);
                     
                     if (cant==1){
                         JOptionPane.showMessageDialog(null,"Se ha modificado correctamente");
                         limpiarcampos();
                         actualizar();
                     }else{
                         JOptionPane.showMessageDialog(null,"No se encontro Provedor intente de nuevo correctamente'","Error update",JOptionPane.ERROR_MESSAGE);
                     }
                 } catch (SQLException ex) {
                     Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
                 }finally{
                     Mysqlconector.liberaConexion(miConexion);
                 }
                  
                
            }
    }//GEN-LAST:event_editarActionPerformed

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        // TODO add your handling code here:
        tabla.clearSelection();
        limpiarcampos();
    }//GEN-LAST:event_nuevoActionPerformed
   private int validaciones(){
       boolean valid;
       valid = Validaciones.validateEmail(this.email.getText());  
            if(Nombre.getText().equals("")||Tel.getText().equals("")||email.getText().equals("")||Domicilio.getText().equals(""))    
                return 1;
                   
            if(!valid)                    
                    return 2;
            
       return 0;
   }
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        //para evitar error que eligan editar en vez de guardar uno nuevo
         int fila = tabla.getSelectedRow();
            if(fila!=-1){
                JOptionPane.showMessageDialog(null,"Seleccione un nuevo Provedor e intentelo de nuevo correctamente'","Error Guardar",JOptionPane.ERROR_MESSAGE);
                return;
            }         
            if(validaciones()==1){
                   JOptionPane.showMessageDialog(null,"Error algunos datos son necesarios favor de ingresarlos","Error guardar",JOptionPane.ERROR_MESSAGE);                 
                   return;
            }
            if(validaciones()==2){
                   JOptionPane.showMessageDialog(null, "Email no valido ingreselo correctamente","Error Email",JOptionPane.ERROR_MESSAGE);
                   return;
            }
            if(!Validaciones.validateTelefono(Tel.getText())){
                JOptionPane.showMessageDialog(null, "Telefono no valido ingreselo con formato (xxx)-xxx-xx-xx o xxx-xxx-xx-xx","Error Telefono",JOptionPane.ERROR_MESSAGE);
                return;
            }            
                 //evitar Proveedores repetidos
                 try{
                      miConexion = conexion.Connection().getConnection();
                    String query="SELECT Nombre FROM Provedores WHERE Nombre='"+Nombre.getText()+"' AND status='A '";
       
                    Statement sta = miConexion.createStatement();
                    ResultSet resul = sta.executeQuery(query);
                  //while(rs.next()){  
                    if(resul.next()){
                       JOptionPane.showMessageDialog(null,"Error este Provedor ya esta registrado","Error guardar",JOptionPane.ERROR_MESSAGE);
                    }else{
                          
                            String queryinsert="INSERT INTO Provedores (Nombre,Domicilio,telefono,Email,status) "
                                    + " VALUES ('"+this.Nombre.getText()+"','"+this.Domicilio.getText()+"','"+this.Tel.getText()+"'"
                                    + ",'"+this.email.getText()+"','A') ";
                           
                            Statement st = miConexion.createStatement();
                            int cont = st.executeUpdate(queryinsert);

                            if(cont==1){
                                JOptionPane.showMessageDialog(null,"El Provedor se ha guardado correctamente");
                                limpiarcampos();
                                actualizar();
                            }else{
                                JOptionPane.showMessageDialog(null,"Error al intentar guardar intentelo de nuevo","Error guardar",JOptionPane.ERROR_MESSAGE);
                            }
                       }
                       
                    } catch (SQLException ex) {
                         Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
                    }finally{
                     Mysqlconector.liberaConexion(miConexion);
                 }
        
    }//GEN-LAST:event_saveActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
                // TODO add your handling code here:
        int fila = tabla.getSelectedRow();
            if(fila==-1){
                JOptionPane.showMessageDialog(null,"Seleccione un Provedor ha eliminar e intente de nuevo correctamente'","Error Delete",JOptionPane.ERROR_MESSAGE);
                return;
            }
            int mensaje=JOptionPane.showConfirmDialog(null,"Estas seguro que deseas eliminar este Provedor?");
               if(mensaje==JOptionPane.YES_OPTION){
                        try {
                            // TODO add your handling code here:
                             miConexion = conexion.Connection().getConnection();
                            String queryDelete="UPDATE Provedores SET status='B' WHERE id_provedor='"+iduser+"' ";

                            Statement st = miConexion.createStatement();
                            int cant = st.executeUpdate(queryDelete);
                            if(cant==1){
                                 JOptionPane.showMessageDialog(null,"Se ha eliminado Provedor correctamente");
                                 limpiarcampos();
                                 actualizar();
                            }else{
                                 JOptionPane.showMessageDialog(null,"No se encontro Provedor intente de nuevo correctamente'","Error Delete",JOptionPane.ERROR_MESSAGE);
                            }
                      
                        } catch (SQLException ex) {
                            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
                        }finally{
                            Mysqlconector.liberaConexion(miConexion);
                        }
                }
    }//GEN-LAST:event_borrarActionPerformed

    private void NombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NombreKeyTyped
        // TODO add your handling code here:
          char c=evt.getKeyChar();
          String cadena= this.Nombre.getText();
          if(cadena.length()>99) {
             
              evt.consume();
              
              JOptionPane.showMessageDialog(null,"Longitu maxima de 100 caracteres","Error Validacion",JOptionPane.ERROR_MESSAGE);
              
          }
        
          if(Character.isDigit(c)) {
              getToolkit().beep();
              evt.consume();              
              JOptionPane.showMessageDialog(null,"Ingresa Solo Letras","Error Validacion",JOptionPane.ERROR_MESSAGE);            
          }
          else if(c>32 && c<=47||c>=58 && c<=64|| c>=91 && c<=96|| c>=123 && c<=255)
           {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Ingrese solo Letras","Error Validacion",JOptionPane.ERROR_MESSAGE);
                Nombre.setCursor(null);
           }
    }//GEN-LAST:event_NombreKeyTyped

    private void busqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busqueActionPerformed
        // TODO add your handling code here:
        limpiarcampos();
        LimpiarJTable();
        try {
             miConexion = conexion.Connection().getConnection();
            String query ="SELECT Nombre,Domicilio,telefono,Email FROM Provedores WHERE status='A' AND (Nombre LIKE '%"+this.busqueda.getText()+"%' "
                    + "OR Domicilio LIKE '%"+this.busqueda.getText()+"%' OR Email LIKE '%"+this.busqueda.getText()+"%') ";
         
            // create the java statement
            Statement st = miConexion.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
              String datos[]={rs.getString("Nombre"),rs.getString("Domicilio"),rs.getString("telefono"),rs.getString("Email")};
               table.addRow(datos);
            }
      
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            Mysqlconector.liberaConexion(miConexion);
        }
    }//GEN-LAST:event_busqueActionPerformed

    private void TelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TelActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void DomicilioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DomicilioActionPerformed
        // TODO add your handling code here:      
    }//GEN-LAST:event_DomicilioActionPerformed

    private void DomicilioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DomicilioKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
          String cadena= this.Domicilio.getText();
          if(cadena.length()>99) {
             
              evt.consume();
              
              JOptionPane.showMessageDialog(null,"Longitu maxima de 100 caracteres","Error Validacion",JOptionPane.ERROR_MESSAGE);
              
          }
    }//GEN-LAST:event_DomicilioKeyTyped
//validar telefono
    private void TelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TelKeyTyped
        // TODO add your handling code here:       
        char c=evt.getKeyChar();
          String cadena= this.Tel.getText();
          if(cadena.length()>19) {
             
              evt.consume();
              
              JOptionPane.showMessageDialog(null,"Longitu maxima de 20 caracteres","Error Validacion",JOptionPane.ERROR_MESSAGE);
              
          }
    }//GEN-LAST:event_TelKeyTyped
//validar correo electronico
    private void emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_emailKeyTyped
    public void LimpiarJTable(){
        int a =table.getRowCount()-1;  //Índices van de 0 a n-1
        //System.out.println("Tabla "+a);   //Para mostrar por consola el resultado
        for(int i=a;i>=0;i--){ 

            //System.out.println("i "+i);    //Para mostrar por consola el resultado
            table.removeRow(i);
        }
    }
    /*private int obtenerid(){
        int id=0;
     
            String query="SELECT id_provedor FROM Provedores";
        try {
           
            Statement st = miConexion.createStatement();
            ResultSet rs = st.executeQuery(query);
          //while(rs.next()){  
            if(rs.last()){
               id=Integer.parseInt(rs.getString("id_provedor"));
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id;
    }*/
    private void limpiarcampos(){
        this.Nombre.setText("");
        this.Domicilio.setText("");
        this.Tel.setText("");
        this.email.setText("");
       
    }
    private void actualizar(){
        
        LimpiarJTable();
     
            String query="SELECT Nombre,Domicilio,telefono,Email FROM Provedores WHERE status='A' ";
        try {
           
            Statement st = miConexion.createStatement();
            ResultSet rs = st.executeQuery(query);
            while(rs.next()){
                String datos[]={rs.getString("Nombre"),rs.getString("Domicilio"),rs.getString("telefono"),rs.getString("Email")};
                table.addRow(datos);
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
      
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
             //   new Proveedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Domicilio;
    private javax.swing.JTextField Nombre;
    private javax.swing.JTextField Tel;
    private javax.swing.JButton borrar;
    private javax.swing.JButton busque;
    private javax.swing.JTextField busqueda;
    private javax.swing.JButton editar;
    private javax.swing.JTextField email;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nuevo;
    private javax.swing.JButton save;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
